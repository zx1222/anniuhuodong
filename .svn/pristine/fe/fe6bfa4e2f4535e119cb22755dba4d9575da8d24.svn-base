<?php

/**
 * Created by PhpStorm.
 * User: Miinno-10
 * Date: 2018/1/23
 * Time: 15:28
 */
namespace app\modules\ejiaonewyear\controllers;

use app\modules\ejiaonewyear\BL\Lottery;
use app\modules\ejiaonewyear\BL\StatusTransfer;
use app\modules\ejiaonewyear\models\Userinfo;
use Yii;
use yii\helpers\Json;
use yii\web\Controller;
use yii\helpers\Url;

class DefaultController extends Controller
{
    public $enableCsrfValidation = false;
    const NONCE_STR = 'new-year';

    /**
     * Renders the index view for the module
     * @return string
     */
    public function init()
    {
        parent::init();
        $this->view->title = Yii::$app->params['site_name'];
    }

    public function beforeAction($action)
    {
        if (Yii::$app->user->isGuest) {
            return $this->redirect(Url::to(['oauth/index', 'forword' => urlencode(Url::current([], true))], true))->send();
        }
        return parent::beforeAction($action); // TODO: Change the autogenerated stub

    }

    /**
     * 活动首页
     * @return string
     */
    public function actionIndex()
    {
        $is_end = StatusTransfer::isEnd();

        StatusTransfer::markRenew();
        if (StatusTransfer::allowLottery() || StatusTransfer::getToDayStatus() % 10 == 0) {
            // 本日抽奖次数达到上线:不允许再抽
            $is_chance = 1;
        }
        return $this->render('index', [
            'is_end' => $is_end,
            'is_chance' => isset($is_chance) ? $is_chance : 0,
        ]);
    }

    /**
     * 活动抽奖
     */
    public function actionLottery()
    {
        $data = Yii::$app->request->post();

        if (StatusTransfer::isEnd() || Yii::$app->user->isGuest || !$data || !self::check($data['timestamp'], $data['randomstr'], $data['signature'])) {
            return;
        }
        if (Yii::$app->request->isAjax && Yii::$app->request->referrer) {
            // 计算今天第几天
            if (StatusTransfer::allowLottery() || StatusTransfer::getToDayStatus() % 10 == 0) {
                // 本日抽奖次数达到上线:不允许再抽
                return false;
            }

            if (!StatusTransfer::allowLottery() && StatusTransfer::getToDayPid() != 0) {
                // 本日已经获奖:可抽但不会中奖
                $result = Lottery::getBad();
                StatusTransfer::markPause();

            }
            if (!StatusTransfer::allowLottery() && StatusTransfer::getToDayPid() == 0) {
                // 可以正常抽奖
                $result = Lottery::run();
            }

            $prize['praisename'] = ($result['id'] != Lottery::BAD_ID) ? $result['praisename'] : '';
            $prize['id'] = $result['id'];
            $prize['praiseimage'] = ($result['id'] != Lottery::BAD_ID) ? $result['praiseimage'] : '';

            return json_encode($prize);
        }

    }

    /**
     * 生成签名
     * @param $timestamp 时间戳
     * @param $randomstr 随机字符串
     * @return string 返回签名
     */
    private static function arithmetic($timestamp, $randomstr)
    {
        $arr['timestamp'] = $timestamp;
        $arr['randomstr'] = $randomstr;
        $arr['noncestr'] = self::NONCE_STR;
        //按照首字母(单元被作为字符串来比较)大小写顺序排序
        sort($arr, SORT_STRING);
        //拼接成字符串
        $str = implode($arr);
        //进行加密
        $signature = sha1($str);
        $signature = md5($signature);
        //转换成大写
        $signature = strtoupper($signature);

        return $signature;
    }

    /**
     * 签名验证
     * @param $timestamp 时间戳
     * @param $randomstr 随机数
     * @param $signature 签名
     * @return bool
     */
    private static function check($timestamp, $randomstr, $signature)
    {
        //验证身份
        $sign = self::arithmetic($timestamp, $randomstr);
        if ($sign != $signature) {
            Yii::info(['sign' => $sign, 'signature' => $signature]);
        }

        return $sign != $signature ? false : true;
    }

    /**
     * Renders the index view for the module 领奖
     * @return string
     */
    public function actionReceive()
    {
        $data = Yii::$app->request->post();

        if (StatusTransfer::isEnd() || Yii::$app->user->isGuest || !$data || !self::check($data['timestamp'], $data['randomstr'], $data['signature'])) {
            return false;
        }
        Yii::info($data);

        $model = new Userinfo();
        if ($model->load($data, '') && $model->save()) {
            $result = [
                'code' => 0,
                'desc' => '添加成功',
            ];
        } else {
            $result = [
                'code' => 1,
                'desc' => $model->getErrors(),
            ];
        }
        return Json::encode($result);
    }

}