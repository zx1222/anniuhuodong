<?php

namespace app\modules\valentinesday\controllers;


use app\modules\valentinesday\models\Photo;
use app\modules\valentinesday\BL\StatusTransfer;
use Yii;
use yii\helpers\Json;
use yii\web\Controller;
use yii\helpers\Url;
use yii\data\ActiveDataProvider;
use app\modules\valentinesday\models\Vote;
use app\modules\valentinesday\models\ValentinesPhoto;
use yii\web\NotFoundHttpException;


/**
 * Default controller for the `fathersday` module
 */
class DefaultController extends Controller
{
    public $enableCsrfValidation = false;

    public function init()
    {
        parent::init();
        $this->view->title = Yii::$app->params['site_name'];
    }

    public function beforeAction($action)
    {

        if (Yii::$app->user->isGuest) {
            return $this->redirect(Url::to(['oauth/index', 'forword' => urlencode(Url::current([], true))], true));
        }

        return parent::beforeAction($action); // TODO: Change the autogenerated stub

    }

    /**
     * 活动首页
     * Renders the index view for the module
     * @return string
     */
    public function actionIndex()
    {

        $openid = isset(Yii::$app->user->identity->openid) ? Yii::$app->user->identity->openid : '';

        //var_dump($openid);die;

        $model = ValentinesPhoto::Photo($openid);

        return $this->render('index', ['model' => $model]);

    }

    /**
     * 用户数据保存
     * @return string
     */
    public function actionCreate()
    {
        $model = new ValentinesPhoto();
        $model->load(Yii::$app->request->get(), '');
        $model->openid = Yii::$app->user->identity->openid;
        if ($model->save(false)) {
            $id = $model->attributes['id'];
            $result['code'] = 0;
            $result['url'] = Url::to(['default/photo', 'id' => $id]);
            $result['desc'] = '添加成功';
        } else {
            $result['code'] = 1;
            $result['desc'] = '添加失败';
        }
        return Json::encode($result);
    }

    /**
     * 图片解密返回存储路径
     * @return string
     */
//    public function actionBase()
//    {
//        $base64 = Yii::$app->request->post('baseUrl');
//
//        $url = explode(',', $base64);
//        $img = base64_decode($url[1]);
//
//        $savePath = date('Y-m-d', time());
//
//        $rand = Yii::$app->getSecurity()->generateRandomString();
//        $directory = Yii::getAlias('@uploadsPath/' . $savePath);
//        if (!is_dir($directory)) {
//            mkdir($directory, 777, true);
//        }
//
//        file_put_contents($directory . '/' . $rand . '.jpg', $img);//保存图片，返回的是字节数
//
//        return $savePath . '/' . $rand . '.jpg';
//    }

    /**
     * 返回图片路径
     * @return string
     */
    public function actionBase()
    {
        $type = $_FILES['file']['type'];
        $num = strrpos($type, '/');
        $filetype = substr($type, $num + 1);

        $tmp = $_FILES['file']['tmp_name'];
        $savePath = date('Y-m-d', time());
        $rand = Yii::$app->getSecurity()->generateRandomString();
        $imgname = $rand . '.' . $filetype;
        $directory = Yii::getAlias('@uploadsPath/' . $savePath);
        if (!is_dir($directory)) {
            mkdir($directory, 0777, true);
        }
        if (move_uploaded_file($tmp, $directory . '/' . $imgname)) {
            return $savePath . '/' . $imgname;
        } else {
            return 0;
        }

    }

    /**
     * 看看别人的照片
     * Renders the exhibition view for the module
     * @return string
     */
    public function actionExhibition()
    {

        $no = Yii::$app->request->get('no');

        $query = ValentinesPhoto::find()->select('id,nickname,photo')->where(['status' => ValentinesPhoto::STATUS_SUCCESS]);

        if (!empty($no)) {
            $query->andWhere(['id' => $no]);
        }
        $query->orderBy("created_at DESC");
        $dataProvider = new ActiveDataProvider([
            'pagination' => false,
            'query' => $query,
        ]);

        return $this->render('exhibition', [
            'dataProvider' => $dataProvider,
        ]);
    }

    /**
     * 查看详情,在此页面投票
     * @param $id
     * @return string
     * @throws NotFoundHttpException
     */
    public function actionPhoto($id)
    {
        $viewData = ValentinesPhoto::findOne($id);
        if (empty($viewData)) {
            throw new NotFoundHttpException('该用户不存在');
        }
        return $this->render('photo', [
            'model' => $viewData,
            'ActivityStatusIsEnd' => StatusTransfer::isEnd()
        ]);
    }

    /**
     * 投票操作
     * Renders the lottery view for the module
     * @return string
     */
    public function actionVote($id)
    {
        if (StatusTransfer::isEnd()) {
            return;
        }
        $openid = Yii::$app->user->identity->openid;

        if (($photoModel = ValentinesPhoto::findOne(['id' => $id])) === null) {
            $res['code'] = 404;
            return json_encode($res);

        }

        $currentDay = (new \DateTime())->format('Y-m-d 00:00:00');

        $voteModel = Vote::find()->where(['>=', 'created_at', $currentDay])->andWhere(['openid' => $openid])->one();

        if (empty($voteModel)) {

            $voteModel = new Vote();

            $voteModel->openid = $openid;
            $voteModel->photo_id = $photoModel->id;
            $voteModel->ip = Yii::$app->request->userIP;

            if ($voteModel->save() !== false) {
                $photoModel->vote = Vote::find()->where(['photo_id' => $photoModel->id])->count();
                $photoModel->save();
            }

            $res['code'] = 200;

        } else {
            $res['code'] = 304;
        }

        return json_encode($res);
    }

}
