$(function () {
    var mySwiper = new Swiper('.swiper-container', {
        effect: 'flip',
        flipEffect: {
            slideShadows: true,
            limitRotation: true,
        },
        onInit: function (swiper) { //Swiper2.x的初始化是onFirstInit
            swiperAnimateCache(swiper); //隐藏动画元素
            swiperAnimate(swiper); //初始化完成开始动画
        },
        onSlideChangeEnd: function (swiper) {
            swiperAnimate(swiper); //每个slide切换结束时也运行当前slide动画
        }
    });

//    p1
    $('.btn-rule').on('click', function () {
        $('.mask-rule').toggleClass('none');
        $('.panel-rule,.btn-start').toggleClass('bounceIn-a')
    });
//    p2
    formatHeight($('.card-container'));
    $('.btn-start').on('click', function () {
        mySwiper.slideNext()
    });
    $('.btn-playAgain').on('click',function () {
        window.location.reload();
    });


    var groupNum = 6,
        preId = 0,
        curId = 0,
        preIndex = 0,
        curIndex = 0,
        idArr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12],
        cardList = $('.card-wrp'),
        successCount = 0,

    //   关卡
        level = 1,

    // 倒计时
        limit = 120;
    timer = null;


    // 初始card id
    resetCardId(idArr, cardList);

    //开始游戏
    gameStart();


    function gameStart() {
        countdown(limit);
        console.log(preId,curId,preIndex,curIndex)
        $('.card-wrp').on('click', function () {
                if (curId == 0) {
                    curId = $(this).attr('data-id');
                    curIndex = $(this).index();
                }
                else {
                    preId = curId;
                    preIndex = curIndex;
                    curId = $(this).attr('data-id');
                    curIndex = $(this).index();
                }
                // console.log('pre:' + preId + 'cur:' + curId);
                //如果前一次点击和当前点击的差的绝对值是成对的组组数 就是一样的 success
                if (Math.abs(preId - curId) == groupNum) {
                    successCount++;
                    $('.leaveGroup-num').text(groupNum - successCount);
                    cardList.eq(preIndex).addClass('success');
                    cardList.eq(curIndex).addClass('success');
                    if (successCount == groupNum) {
                        clearInterval(timer);
                        level++;
                        successCount = 0;
                        if (level == 2) {
                            limit = 60
                        }
                        if (level == 3) {
                            limit = 30
                        }
                        if(level>3){
                            $('.btn-nextLevel').addClass('none');
                            $('.btn-toDraw').removeClass('none');
                            $('.btn-toDraw').addClass('bounceIn')
                        }
                        $('.mask-passOne').removeClass('none');
                        $('.panel-passOne,.btn-nextLevel').addClass('bounceIn');
                    }
                }
                $('.card-wrp').removeClass('flipped')
                $(this).addClass('flipped')
            }
        );
    }

    $('.btn-nextLevel').on('click', function () {
        preId = 0;
        curId = 0;
        preIndex = 0;
        curIndex = 0;
        $('.leaveGroup-num').text(groupNum)
        $('.slogan').addClass('none');
        $('.slogan').eq(level - 1).removeClass('none');
        $('.card-wrp').removeClass().addClass('card-wrp');
        $('.mask-passOne').toggleClass('none');
        $('.panel-passOne').attr('src', 'assets/images/panel-level' + level + '.png');
        resetCardId(idArr, cardList);
        countdown(limit);
    });
});

function resetCardId(idArr, cardList) {
    var _idArr = idArr.slice(0);
    for (var i = 0; i < cardList.length; i++) {
        var index = Math.floor(Math.random() * _idArr.length);
        cardList.eq(_idArr[index] - 1).attr({'data-id': i + 1});

        // if (i == 0) {
            cardList.eq(_idArr[index] - 1).find('.card-back img').attr('src', 'assets/images/card'+(i+1)+'.png');
        // }
        // if (i == 6) {
        //     cardList.eq(_idArr[index] - 1).find('.card-back img').attr('src', 'assets/images/card1-2.png');
        // }
        // if (i == 1) {
        //     cardList.eq(_idArr[index] - 1).find('.card-back img').attr('src', 'assets/images/card2-1.png');
        // }
        // if (i == 7) {
        //     cardList.eq(_idArr[index] - 1).find('.card-back img').attr('src', 'assets/images/card2-2.png');
        // }
        // if (i == 2) {
        //     cardList.eq(_idArr[index] - 1).find('.card-back img').attr('src', 'assets/images/card3-1.png');
        // }
        // if (i == 8) {
        //     cardList.eq(_idArr[index] - 1).find('.card-back img').attr('src', 'assets/images/card3-2.png');
        // }
        // if (i == 3) {
        //     cardList.eq(_idArr[index] - 1).find('.card-back img').attr('src', 'assets/images/card4-1.png');
        // }
        // if (i == 9) {
        //     cardList.eq(_idArr[index] - 1).find('.card-back img').attr('src', 'assets/images/card4-2.png');
        // }
        // if (i == 4) {
        //     cardList.eq(_idArr[index] - 1).find('.card-back img').attr('src', 'assets/images/card5-1.png');
        // }
        // if (i == 10) {
        //     cardList.eq(_idArr[index] - 1).find('.card-back img').attr('src', 'assets/images/card5-2.png');
        // }
        // if (i == 5) {
        //     cardList.eq(_idArr[index] - 1).find('.card-back img').attr('src', 'assets/images/card6-1.png');
        // }
        // if (i == 11) {
        //     cardList.eq(_idArr[index] - 1).find('.card-back img').attr('src', 'assets/images/card6-2.png');
        // }
        _idArr.splice(index, 1);
    }
}

function countdown(limit) {
    timer = setInterval(function () {
        limit--;
        $('.countdown-num').text(limit);
        if (limit == 0) {
            $('.mask').addClass('none');
            $('.mask-notPass').removeClass('none');
            clearInterval(timer)
        }
    }, 1000)
}


function formatHeight(itemWrp) {
    var width = $(itemWrp).find('.card-wrp').width()
    $(itemWrp).find('.card-wrp').height(width);
}

